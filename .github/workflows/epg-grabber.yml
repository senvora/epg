name: EPG Grabber

on:
  schedule:
    - cron: '0 22 * * *' # 22:00 UTC / 03:30 IST
  workflow_dispatch:

env:
  TZ: Asia/Kolkata

jobs:
  grab-and-download:
    name: Grab & Process EPG in Parallel with Logging
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      # Checkout repo
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # Cache Node.js dependencies
      - name: Cache Node.js dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: node-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: node-modules-

      # Install Node.js dependencies
      - name: Install Node.js dependencies
        run: npm install --no-audit --no-fund --legacy-peer-deps

      # Grab all EPGs in parallel with logging
      - name: Grab EPGs in Parallel with Logging
        run: |
          mkdir -p epg/dishtv epg/tataplay epg/distrotv logs

          grab_dishtv() {
            echo "[INFO] Starting DishTV grab..."
            npm run grab -- --channels=sites/dishtv.in/dishtv.xml --maxConnections=10 --days=2 \
              > logs/dishtv.log 2>&1
            mv guide.xml epg/dishtv.xml
            python3 scripts/dishtv_epg.py >> logs/dishtv.log 2>&1
            echo "[INFO] DishTV grab completed."
          }

          grab_tataplay() {
            echo "[INFO] Starting TataPlay grab..."
            npm run grab -- --channels=sites/tataplay.com/tataplay.xml --maxConnections=10 --days=2 \
              > logs/tataplay.log 2>&1
            mv guide.xml epg/tataplay.xml
            python3 scripts/tataplay_epg.py >> logs/tataplay.log 2>&1
            echo "[INFO] TataPlay grab completed."
          }

          grab_distrotv() {
            echo "[INFO] Starting DistroTV grab..."
            npm run grab -- --channels=sites/distro.tv/distrotv.xml --maxConnections=10 --days=2 \
              > logs/distrotv.log 2>&1
            mv guide.xml epg/distrotv.xml
            python3 scripts/distrotv_epg.py >> logs/distrotv.log 2>&1
            echo "[INFO] DistroTV grab completed."
          }

          # Run all grabs in parallel
          grab_dishtv &
          grab_tataplay &
          grab_distrotv &

          # Wait for all background jobs
          wait

          # Show summary logs
          echo "================ Summary Logs ================"
          cat logs/dishtv.log
          echo "---------------------------------------------"
          cat logs/tataplay.log
          echo "---------------------------------------------"
          cat logs/distrotv.log
          echo "============================================="

      # Setup Python for downloader
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      # Cache Python dependencies
      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: python-deps-${{ hashFiles('requirements.txt') || 'default' }}
          restore-keys: python-deps-

      # Install Python dependencies
      - name: Install Python dependencies
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install requests
          fi

      # Run EPG Downloader Script
      - name: Run EPG Downloader Script
        run: python scripts/epg-downloader.py

      # Commit & push only latest .xml.gz files
      - name: Commit & Push Updates
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions Bot"
          git pull --rebase origin main || true
          git add epg/*.xml.gz || true
          git diff --cached --quiet || git commit -m "EPG updated at $(date +'%Y-%m-%d %H:%M:%S') (IST)"
          git push || echo "No changes to push"
