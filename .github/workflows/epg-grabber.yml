name: EPG Grabber

on:
  schedule:
    - cron: '0 22 * * *' # 22:00 UTC / 03:30 IST
  workflow_dispatch:

jobs:
  grabber:
    name: EPG Grabber
    runs-on: ubuntu-latest
    permissions:
      contents: write   # allow push

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # ensure full history for rebase

      # Step 2: Configure Git
      - name: Configure Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions Bot"

      # Step 3: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: epg/package-lock.json

      # Step 4: Install Node.js dependencies
      - name: Install Node.js dependencies
        run: cd epg-org && npm install --no-audit --no-fund --legacy-peer-deps

      # Step 5: Run grabbers
      - name: Grab DishTV EPG
        run: |
          cd epg-org
          TZ=Asia/Kolkata npm run grab -- --channels=../sites/dishtv.in/dishtv.xml --maxConnections=10 --days=3 --gzip
          mkdir -p ../epg
          cp guide.xml ../epg/dishtv.xml
          cp guide.xml.gz ../epg/dishtv.xml.gz

      - name: Grab TataPlay EPG
        run: |
          cd epg-org
          TZ=Asia/Kolkata npm run grab -- --channels=../sites/tataplay.com/tataplay.xml --maxConnections=10 --days=3 --gzip
          mkdir -p ../epg
          cp guide.xml ../epg/tataplay.xml
          cp guide.xml.gz ../epg/tataplay.xml.gz
      
      - name: Grab DistroTV EPG
        run: |
          cd epg-org
          TZ=Asia/Kolkata npm run grab -- --channels=../sites/distro.tv/distrotv.xml --maxConnections=10 --days=3 --gzip
          mkdir -p ../epg
          cp guide.xml ../epg/distrotv.xml
          cp guide.xml.gz ../epg/distrotv.xml.gz

      # Step 6: Save epg/ folder
      - name: Upload EPG folder
        uses: actions/upload-artifact@v4
        with:
          name: epg-files
          path: epg/

      # Step 7: Get current IST date
      - name: Get current date in IST
        id: get_date
        env:
          TZ: Asia/Kolkata
        run: echo "current_date=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV

      # Step 8: Commit & push updates
      - name: Commit & push updated EPG files
        run: |
          git pull --rebase origin main || true
          git add epg/*.xml.gz || true
          git commit -m "EPG updated at ${{ env.current_date }} (IST)" || echo "No changes to commit"
          git push
