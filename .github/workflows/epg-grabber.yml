name: EPG Grabber

on:
  schedule:
    - cron: '0 22 * * *' # 22:00 UTC / 03:30 IST
  workflow_dispatch:

jobs:
  grabber:
    name: EPG Grabber
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Git identity
      - name: Configure Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions Bot"

      # Step 3: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install Node.js dependencies
        run: npm install --no-audit --no-fund --legacy-peer-deps

      # Step 4: Run Node.js EPG grabbers
      - name: Grab DishTV EPG
        run: |
          TZ=Asia/Kolkata npm run grab -- --channels=sites/dishtv.in/dishtv.xml --maxConnections=10 --days=2 --gzip
          cp guide.xml dishtv.xml
          cp guide.xml.gz dishtv.xml.gz
          python3 scripts/dishtv_epg.py

      - name: Grab TataPlay EPG
        run: |
          TZ=Asia/Kolkata npm run grab -- --channels=sites/tataplay.com/tataplay.xml --maxConnections=10 --days=2 --gzip
          cp guide.xml tataplay.xml
          cp guide.xml.gz tataplay.xml.gz
          python3 scripts/tataplay_epg.py

      - name: Grab DistroTV EPG
        run: |
          TZ=Asia/Kolkata npm run grab -- --channels=sites/ditro.tv/tataplay.xml --maxConnections=10 --days=2 --gzip
          cp guide.xml tataplay.xml
          cp guide.xml.gz distrotv.xml.gz
          python3 scripts/distrotv_epg.py

      # Save EPG files for the next job
      - name: Upload EPG files
        uses: actions/upload-artifact@v4
        with:
          name: epg-files
          path: "*.xml*"

  downloader:
    name: EPG Downloader
    runs-on: ubuntu-latest
    needs: grabber
    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Git identity
      - name: Configure Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions Bot"

      # Step 3: Download artifacts from grabber
      - name: Download EPG artifacts
        uses: actions/download-artifact@v4
        with:
          name: epg-files
          path: .

      # Step 4: Setup Python
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install Python dependencies
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install requests
          fi

      # Step 5: Run EPG Downloader Script
      - name: Run XML Organizer Script
        run: |
          export TZ=Asia/Kolkata
          date  # confirm current timezone in logs
          python scripts/epg-downloader.py

      # Step 6: Get current IST date
      - name: Get current date in IST
        id: get_date
        env:
          TZ: Asia/Kolkata
        run: echo "current_date=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV

      # Step 7: Commit & push updated EPG files
      - name: Commit & push updated EPG files
        run: |
          git add epg/*.xml.gz || true
          git commit -m "EPG updated at ${{ env.current_date }} (IST)" || echo "No changes to commit"
          git pull --rebase origin main || true
          git push
