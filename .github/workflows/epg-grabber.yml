name: EPG Grabber

on:
  schedule:
    - cron: '0 22 * * *' # 22:00 UTC / 03:30 IST
  workflow_dispatch:

env:
  TZ: Asia/Kolkata

# -------------------------------
# Grabber Jobs
# -------------------------------
jobs:
  grabber-dishtv:
    name: Grab DishTV EPG
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache Node.js dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: node-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: node-modules-

      - name: Install Node.js dependencies
        run: npm install --no-audit --no-fund --legacy-peer-deps

      - name: Grab DishTV EPG
        run: |
          npm run grab -- --channels=sites/dishtv.in/dishtv.xml --maxConnections=10 --days=2 --gzip
          python3 scripts/dishtv_epg.py
          mkdir -p epg/dishtv
          cp guide.xml ../epg/dishtv.xml
          cp guide.xml.gz ../epg/dishtv.xml.gz

      - name: Upload DishTV EPG
        uses: actions/upload-artifact@v4
        with:
          name: epg-dishtv
          path: epg/dishtv/

  grabber-tataplay:
    name: Grab TataPlay EPG
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache Node.js dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: node-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: node-modules-

      - name: Install Node.js dependencies
        run: npm install --no-audit --no-fund --legacy-peer-deps

      - name: Grab TataPlay EPG
        run: |
          npm run grab -- --channels=sites/tataplay.com/tataplay.xml --maxConnections=10 --days=2 --gzip
          python3 scripts/tataplay_epg.py
          mkdir -p epg/tataplay
          cp guide.xml ../epg/tataplay.xml
          cp guide.xml.gz ../epg/tataplay.xml.gz

      - name: Upload TataPlay EPG
        uses: actions/upload-artifact@v4
        with:
          name: epg-tataplay
          path: epg/tataplay/

  grabber-distrotv:
    name: Grab DistroTV EPG
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache Node.js dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: node-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: node-modules-

      - name: Install Node.js dependencies
        run: npm install --no-audit --no-fund --legacy-peer-deps

      - name: Grab DistroTV EPG
        run: |
          npm run grab -- --channels=sites/distro.tv/distrotv.xml --maxConnections=10 --days=2 --gzip
          python3 scripts/distrotv_epg.py
          mkdir -p epg/distrotv
          cp guide.xml ../epg/distrotv.xml
          cp guide.xml.gz ../distrotv.xml.gz

      - name: Upload DistroTV EPG
        uses: actions/upload-artifact@v4
        with:
          name: epg-distrotv
          path: epg/distrotv/

# -------------------------------
# Downloader Job
# -------------------------------
  downloader:
    name: EPG Downloader
    runs-on: ubuntu-latest
    needs:
      - grabber-dishtv
      - grabber-tataplay
      - grabber-distrotv
    steps:
      - uses: actions/checkout@v4

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: python-deps-${{ hashFiles('requirements.txt') || 'default' }}
          restore-keys: python-deps-

      - name: Install Python dependencies
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install requests
          fi

      - name: Download DishTV
        uses: actions/download-artifact@v4
        with:
          name: epg-dishtv
          path: epg/dishtv/

      - name: Download TataPlay
        uses: actions/download-artifact@v4
        with:
          name: epg-tataplay
          path: epg/tataplay/

      - name: Download DistroTV
        uses: actions/download-artifact@v4
        with:
          name: epg-distrotv
          path: epg/distrotv/

      - name: Cleanup old .xml.gz files
        run: |
          find epg/ -type f -name "*.xml.gz" -mtime +7 -exec rm -f {} \;

      - name: Run EPG Downloader Script
        run: python scripts/epg-downloader.py

      - name: Get current date in IST
        id: get_date
        run: echo "current_date=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV

      - name: Commit & push updated EPG files
        run: |
          git pull --rebase origin main || true
          git add epg/*.xml.gz || true
          git diff --cached --quiet || git commit -m "EPG updated and cleaned at ${{ env.current_date }} (IST)"
          git push || echo "No changes to push"
