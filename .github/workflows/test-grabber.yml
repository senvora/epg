name: Test Grabber

on:
  workflow_dispatch:

jobs:
  grabber:
    name: Test Grabber
    runs-on: ubuntu-latest
    env:
      TZ: Asia/Kolkata   # ✅ All steps run in IST

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Git identity
      - name: Configure Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions Bot"

      # Step 3: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: package-lock.json

      # Step 4: Install Node.js dependencies
      - name: Install Node.js dependencies
        run: npm install --no-audit --no-fund --legacy-peer-deps

      # Step 5: Run grabber → produces raw distrotv.xml
      - name: Grab DistroTV EPG
        run: |
          mkdir -p epg
          npm run grab -- --channels=sites/distro.tv/distrotv.xml --days=1 --output=epg/distrotv.xml

      # Step 6: Clean + compress with Python (removes distrotv.xml after gzip)
      - name: Clean & compress XML
        run: |
          python3 scripts/personal/distrotv_epg.py
          rm -f epg/distrotv.xml   # ✅ Remove XML, keep only .gz

      # Step 7: Print IST date/time (verification)
      - name: Print IST time
        run: date +"%Y-%m-%d %H:%M:%S %Z"

      # Step 8: Upload epg/ folder as artifact (optional)
      - name: Upload EPG folder
        uses: actions/upload-artifact@v4
        with:
          name: epg-files
          path: epg/

      # Step 9: Commit & push updated EPG files
      - name: Commit & push updated EPG files
        run: |
          git add epg/distrotv.xml.gz || true
          git commit -m "EPG updated at $(date +'%Y-%m-%d %H:%M:%S') IST" || echo "No changes to commit"
          git pull --rebase origin main || true
          git push
